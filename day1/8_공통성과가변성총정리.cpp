// 8_공통성과가변성총정리

// 핵심: 변하지 않은 코드 안에 있는 변하는 것은 분리되어야 한다.

// 멤버 함수에서 변하는 것

// 1. 가상함수로 분리 - "template method"
//    단점: 실행 시간에 교체 안됨. 정책을 다른 클래스가 사용할 수 없다.

// 2. 다른 클래스로 분리
//    (A) 인터페이스를 사용해서 정책 클래스 교체 - "Strategy"
//        장점: 실행시간에 교체 가능

//    (B) 템플릿 인자를 사용해서 정책 클래스 교체 - "Policy Base Design"
//        장점: 정책이 인라인 치환된다. - C++만의 기술.
//
// 멤버가 아닌 일반함수에서 변하는 것
//    -> 변하는 것을 함수 인자로
//    (1) 함수포인터 사용
//    (2) 함수객체 또는 람다 표현식 사용 - 인라인 치환 가능. C에서는 안됨.